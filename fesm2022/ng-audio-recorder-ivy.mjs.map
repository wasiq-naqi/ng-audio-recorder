{"version":3,"file":"ng-audio-recorder-ivy.mjs","sources":["../../../projects/ng-audio-recorder-ivy/src/lib/ng-audio-recorder.service.ts","../../../projects/ng-audio-recorder-ivy/src/lib/ng-audio-recorder.module.ts","../../../projects/ng-audio-recorder-ivy/src/public-api.ts","../../../projects/ng-audio-recorder-ivy/src/ng-audio-recorder-ivy.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\ndeclare var MediaRecorder: any;\n\n@Injectable()\nexport class NgAudioRecorderService {\n\n  private chunks: Array<any> = [];\n  protected recorderEnded = new EventEmitter();\n  public recorderError = new EventEmitter<ErrorCase>();\n  // tslint:disable-next-line\n  private _recorderState = RecorderState.INITIALIZING;\n\n  constructor() {\n  }\n\n  private recorder: any;\n\n\n  private static guc() {\n    return navigator.mediaDevices.getUserMedia({audio: true});\n  }\n\n\n  getUserContent() {\n    return NgAudioRecorderService.guc();\n  }\n\n  startRecording() {\n    if (this._recorderState === RecorderState.RECORDING) {\n      this.recorderError.emit(ErrorCase.ALREADY_RECORDING);\n    }\n    if (this._recorderState === RecorderState.PAUSED) {\n      this.resume();\n      return;\n    }\n    this._recorderState = RecorderState.INITIALIZING;\n    NgAudioRecorderService.guc().then((mediaStream) => {\n      this.recorder = new MediaRecorder(mediaStream);\n      this._recorderState = RecorderState.INITIALIZED;\n      this.addListeners();\n      this.recorder.start();\n      this._recorderState = RecorderState.RECORDING;\n    });\n  }\n\n  pause() {\n    if (this._recorderState === RecorderState.RECORDING) {\n      this.recorder.pause();\n      this._recorderState = RecorderState.PAUSED;\n    }\n  }\n\n  resume() {\n    if (this._recorderState === RecorderState.PAUSED) {\n      this._recorderState = RecorderState.RECORDING;\n      this.recorder.resume();\n    }\n  }\n\n  stopRecording(outputFormat: OutputFormat) {\n    this._recorderState = RecorderState.STOPPING;\n    return new Promise((resolve, reject) => {\n      this.recorderEnded.subscribe((blob) => {\n        this._recorderState = RecorderState.STOPPED;\n        if (outputFormat === OutputFormat.WEBM_BLOB) {\n          resolve(blob);\n        }\n        if (outputFormat === OutputFormat.WEBM_BLOB_URL) {\n          const audioURL = URL.createObjectURL(blob);\n          resolve(audioURL);\n        }\n      }, _ => {\n        this.recorderError.emit(ErrorCase.RECORDER_TIMEOUT);\n        reject(ErrorCase.RECORDER_TIMEOUT);\n      });\n      this.recorder.stop();\n    }).catch(() => {\n      this.recorderError.emit(ErrorCase.USER_CONSENT_FAILED);\n    });\n  }\n\n  getRecorderState() {\n    return this._recorderState;\n  }\n\n  private addListeners() {\n    this.recorder.ondataavailable = this.appendToChunks;\n    this.recorder.onstop = this.recordingStopped;\n  }\n\n  private appendToChunks = (event: any) => {\n    this.chunks.push(event.data);\n  };\n  private recordingStopped = (event: any) => {\n    const blob = new Blob(this.chunks, {type: 'audio/webm'});\n    this.chunks = [];\n    this.recorderEnded.emit(blob);\n    this.clear();\n  };\n\n  private clear() {\n    this.recorder = null;\n    this.chunks = [];\n  }\n}\n\n\nexport enum OutputFormat {\n  WEBM_BLOB_URL,\n  WEBM_BLOB,\n}\n\nexport enum ErrorCase {\n  USER_CONSENT_FAILED,\n  RECORDER_TIMEOUT,\n  ALREADY_RECORDING\n}\n\nexport enum RecorderState {\n  INITIALIZING,\n  INITIALIZED,\n  RECORDING,\n  PAUSED,\n  STOPPING,\n  STOPPED\n}\n","import { NgModule } from '@angular/core';\nimport { NgAudioRecorderService } from './ng-audio-recorder.service';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: [],\n  providers: [\n    NgAudioRecorderService\n  ]\n})\nexport class NgAudioRecorderModule { }\n","/*\n * Public API Surface of ng-audio-recorder\n */\n\nexport * from './lib/ng-audio-recorder.service';\nexport * from './lib/ng-audio-recorder.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}